name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  validate:
    name: Test and lint
    runs-on: ubuntu-latest
    container: node:20-bullseye

    services:
      database:
        image: postgres:14.2-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: doodlebob-test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      PORT: 4000
      PG_HOST: database
      PG_PORT: 5432
      JWT_SECRET: qwertyuiop1234567890
      JWT_EXPIRATION: 15m
      JWT_REFRESH_EXPIRATION: 30d
      TYPEORM_SYNCHRONIZE: false
      TYPEORM_LOGGING: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Create database
        run: pnpm db:create

      - name: Run migrations
        run: pnpm migration:run

      - name: Test
        run: pnpm test
